"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""

def even_fibonacci_sum(max_val):
    
    """ Calculate fibonacci sequence until max_val is hit or exceeded and sum the even ones """
    
    # F(n) = f(n_1) + f(n_2)
    next_fib_num = 0
    # Start this bad boy as 2 so we don't skip the first even number in the sequence (unless, of course the max val is less than 2 :^) )
    fib_sum = 2 if max_val > 1 else 0
    n_1 = 1
    n_2 = 2
    # Recursion would have been fun, but this is safer (stupid stack) :(
    while max_val > next_fib_num:
        next_fib_num = n_1 + n_2
        n_1 = n_2
        n_2 = next_fib_num
        if next_fib_num % 2 == 0:
            fib_sum = fib_sum + next_fib_num
    return fib_sum

print(f"Even fib sum until 4 million: {even_fibonacci_sum(4000000)}")